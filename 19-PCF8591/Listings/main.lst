C51 COMPILER V9.54   MAIN                                                                  03/16/2025 20:46:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          // // #include <reg52.h>
   2          #include <STC15F2K60S2.h>
   3          #include "iic.h"
   4          
   5          //Delay
   6          void Delay(unsigned int t){
   7   1          while(t--);
   8   1      }
   9          //System Init
  10          void Set_HC573(unsigned char channel,unsigned char dat){
  11   1        P2 = (P2 & 0x1f) | (channel << 5);
  12   1        P0 = dat;
  13   1      }
  14          unsigned char LED_State = 0xff;
  15          //SMG
  16          unsigned char SMGCode[] =
  17          {
  18          0xc0, //0
  19          0xf9, //1
  20          0xa4, //2
  21          0xb0, //3
  22          0x99, //4
  23          0x92, //5
  24          0x82, //6
  25          0xf8, //7
  26          0x80, //8
  27          0x90, //9
  28          0x88, //A
  29          0x83, //b
  30          0xc6, //C
  31          0xa1, //d
  32          0x86, //E
  33          0x8e, //F
  34          0xBF, //-
  35          0xff //None
  36          };
  37          void SMG(unsigned char Location,unsigned char num){
  38   1          Set_HC573(6,(0x01 << Location));
  39   1          Set_HC573(7, SMGCode[num]);
  40   1          Delay(500);
  41   1        Set_HC573(7,0xff);
  42   1      }
  43          void SMGDot(unsigned char Location,unsigned char num){
  44   1          Set_HC573(6,(0x01 << Location));
  45   1          Set_HC573(7, SMGCode[num]-0x80);
  46   1          Delay(500);
  47   1        Set_HC573(7,0xff);
  48   1      }
  49          
  50          // unsigned char Ad_Read(unsigned char addr)
  51          // {
  52          //  unsigned char temp;
  53          //  I2CStart();
  54          //  I2CSendByte(0x90);
C51 COMPILER V9.54   MAIN                                                                  03/16/2025 20:46:00 PAGE 2   

  55          //  I2CWaitAck();
  56          //  I2CSendByte(addr);
  57          //  I2CWaitAck();
  58          //  I2CStart();
  59          //  I2CSendByte(0x91);
  60          //  I2CWaitAck();
  61          //  temp = I2CReceiveByte();
  62          //  I2CSendAck(1);
  63          //  I2CStop();
  64          //  return temp;
  65          // }
  66          
  67          void DA_Write(unsigned char dat){
  68   1        I2CStart();
  69   1        I2CSendByte(0x90);
  70   1        I2CWaitAck();
  71   1        I2CSendByte(0x41);    //0100 0001
  72   1        I2CWaitAck();
  73   1          I2CSendByte(dat);
  74   1          I2CWaitAck();
  75   1        I2CStop();
  76   1      }
  77          
  78          unsigned char AD_Read(unsigned char channel) {
  79   1          unsigned char temp;
  80   1          //可以看作一个伪写，主要作用是写入字节告知所读取地址
  81   1          I2CStart();
  82   1          I2CSendByte(0x90);  // PCF8591地址 + 写位(0)
  83   1          I2CWaitAck();
  84   1          I2CSendByte(0x40 | channel);  // 控制字节：选择通道(0-3)，模拟输入模式
  85   1          I2CWaitAck();
  86   1      
  87   1          //开始读;操作
  88   1          I2CStart();
  89   1          I2CSendByte(0x91);
  90   1          I2CWaitAck();
  91   1          temp = I2CReceiveByte();
  92   1          I2CSendAck(0);
  93   1          temp = I2CReceiveByte();
  94   1          I2CSendAck(1);
  95   1          I2CStop();
  96   1          return temp;
  97   1      }
  98          
  99          void PCF8591_ADC_Init(unsigned char channel) {
 100   1          I2CStart();
 101   1          I2CSendByte(0x90);  // PCF8591地址 + 写位(0)
 102   1          I2CWaitAck();
 103   1          I2CSendByte(0x40 | channel);  // 控制字节：选择通道(0-3)，模拟输入模式
 104   1          I2CWaitAck();
 105   1          I2CStop();
 106   1          
 107   1          // 等待转换完成
 108   1          Delay(10);
 109   1      }
 110          
 111          unsigned char PCF8591_ReadADC(unsigned char channel) {
 112   1          unsigned char val;
 113   1          
 114   1          // 设置ADC通道
 115   1          PCF8591_ADC_Init(channel);
 116   1          
C51 COMPILER V9.54   MAIN                                                                  03/16/2025 20:46:00 PAGE 3   

 117   1          // 读取ADC值
 118   1          I2CStart();
 119   1          I2CSendByte(0x91);  // PCF8591地址 + 读位(1)
 120   1          I2CWaitAck();
 121   1          
 122   1          // 丢弃第一个字节(上次转换结果)
 123   1          val = I2CReceiveByte();
 124   1          I2CSendAck(0);  // 继续读取
 125   1          
 126   1          // 读取有效值
 127   1          val = I2CReceiveByte();
 128   1          I2CSendAck(1);  // 发送NACK结束读取
 129   1          
 130   1          I2CStop();
 131   1          return val;
 132   1      }
 133          
 134          // void PCF8591_ReadMultiChannel(unsigned char *dat, unsigned char channels) {
 135          //     unsigned char i;
 136              
 137          //     // 读取多个通道
 138          //     for(i = 0; i < channels && i < 4; i++) {
 139          //         dat[i] = PCF8591_ReadADC(i);
 140          //         Delay(5);  // 短暂延时确保转换完成
 141          //     }
 142          // }
 143          
 144          void InitSystem(){
 145   1        Set_HC573(0,0x00);
 146   1        Set_HC573(5,0x00);  //Disable Buzzer
 147   1        Set_HC573(4,0xff);  //Disable LED
 148   1        Set_HC573(6,0xff);
 149   1        Set_HC573(7,0xff);  //Disable SMG
 150   1      }
 151          
 152          void main()
 153          {
 154   1          unsigned char dat1,dat2;
 155   1          dat1 = 0;
 156   1          dat2 = 0;
 157   1          InitSystem();
 158   1        Delay(10000);
 159   1          while(1)
 160   1          {
 161   2              dat1 = AD_Read(0x41);
 162   2              Delay(100);
 163   2              dat2 = AD_Read(0x43);
 164   2              Delay(100);
 165   2              SMG(0,dat1/100);
 166   2              SMG(1,dat1/10%10);
 167   2              SMG(2,dat1%10);
 168   2              SMG(4,dat2/100);
 169   2              SMG(5,dat2/10%10);
 170   2              SMG(6,dat2%10);
 171   2              DA_Write(255);
 172   2          }
 173   1      }
 174          // void main() {
 175          //     unsigned char adc_values[4];
 176              
 177          //     InitSystem();
 178          //     Delay(100);
C51 COMPILER V9.54   MAIN                                                                  03/16/2025 20:46:00 PAGE 4   

 179              
 180          //     while(1) {
 181          //         // 读取所有通道
 182          //    adc_values[0]=PCF8591_ReadADC(2);
 183          //         // PCF8591_ReadMultiChannel(adc_values, 0);
 184                  
 185          //         // 显示光敏电阻值(AIN0)
 186          //         SMG(0, 10);  // 'A'
 187          //         SMG(1, 0);   // '0'
 188          //         SMG(2, 17);  // 空白
 189          //         SMG(3, adc_values[0]/100);      // 百位
 190          //         SMG(4, (adc_values[0]%100)/10); // 十位
 191          //         SMG(5, adc_values[0]%10);       // 个位
 192          //         // Delay(50000);
 193                  
 194          //         // // 显示热敏电阻值(AIN1)
 195          //         // SMG(0, 10);  // 'A'
 196          //         // SMG(1, 1);   // '1'
 197          //         // SMG(2, 17);  // 空白
 198          //         // SMG(3, adc_values[1]/100);      // 百位
 199          //         // SMG(4, (adc_values[1]%100)/10); // 十位
 200          //         // SMG(5, adc_values[1]%10);       // 个位
 201          //         // Delay(50000);
 202                  
 203          //         // // 显示电位器值(AIN2)
 204          //         // SMG(0, 10);  // 'A'
 205          //         // SMG(1, 2);   // '2'
 206          //         // SMG(2, 17);  // 空白
 207          //         // SMG(3, adc_values[2]/100);      // 百位
 208          //         // SMG(4, (adc_values[2]%100)/10); // 十位
 209          //         // SMG(5, adc_values[2]%10);       // 个位
 210          //         // Delay(50000);
 211          //     }
 212          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    426    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
